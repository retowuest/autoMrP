% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_knn.R
\name{run_knn}
\alias{run_knn}
\title{Apply KNN classifier to MrP.}
\usage{
run_knn(
  y,
  L1.x,
  L2.x,
  L2.unit,
  L2.reg,
  loss.unit,
  loss.fun,
  knn.k.max,
  knn.k,
  knn.kernel,
  data,
  verbose,
  cores
)
}
\arguments{
\item{y}{Outcome variable. A character scalar containing the column name of
the outcome variable in \code{survey}.}

\item{L1.x}{Individual-level covariates. A character vector containing the
column names of the individual-level variables in \code{survey} and
\code{census} used to predict outcome \code{y}. Note that geographic unit
is specified in argument \code{L2.unit}.}

\item{L2.x}{Context-level covariates. A character vector containing the
column names of the context-level variables in \code{survey} and
\code{census} used to predict outcome \code{y}. To exclude context-level
variables, set \code{L2.x = NULL}.}

\item{L2.unit}{Geographic unit. A character scalar containing the column
name of the geographic unit in \code{survey} and \code{census} at which
outcomes should be aggregated.}

\item{L2.reg}{Geographic region. A character scalar containing the column
name of the geographic region in \code{survey} and \code{census} by which
geographic units are grouped (\code{L2.unit} must be nested within
\code{L2.reg}). Default is \code{NULL}.}

\item{loss.unit}{Loss function unit. A character-valued scalar indicating
whether performance loss should be evaluated at the level of individual
respondents (\code{individuals}), geographic units (\code{L2 units}) or at
both levels. Default is \code{c("individuals", "L2 units")}. With multiple
loss units, parameters are ranked for each loss unit and the loss unit with
the lowest rank sum is chosen. Ties are broken according to the order in
the search grid.}

\item{loss.fun}{Loss function. A character-valued scalar indicating whether
prediction loss should be measured by the mean squared error (\code{MSE}),
the mean absolute error (\code{MAE}), binary cross-entropy
(\code{cross-entropy}), mean squared false error (\code{msfe}), the f1
score (\code{f1}), or a combination thereof. Default is \code{c("MSE",
"cross-entropy","msfe", "f1")}. With multiple loss functions, parameters
are ranked for each loss function and the parameter combination with the
lowest rank sum is chosen. Ties are broken according to the order in the
search grid.}

\item{knn.k.max}{KNN maximum number of neighbors. An positive integer-valued
scalar specifying the maximum number of neighbors to be considered in the
KNN model if \code{knn.k} is \code{NULL}. If \code{knn.k.max} is specified
and \code{knn.k} is \code{NULL}, then the number of neighbors considered is
the sequence \code{1:knn.k.max}. Default is \code{11}.}

\item{knn.k}{KNN number of neighbors. A \code{vector} of positive integers
specifying the number of neighbors to be considered in the KNN model. If
not \code{NULL}, \code{knn.k} takes precedence over \code{knn.k.max}.
Default is \code{NULL}.}

\item{knn.kernel}{KNN kernel. A character-valued scalar specifying the kernel
to be used in the KNN model. The possible values are \code{rectangular}
(which is standard unweighted KNN), \code{triangular}, \code{epanechnikov}
(or beta(2,2)), \code{biweight} (or beta(3,3)), \code{triweight} (or
beta(4,4)), \code{cos}, \code{inv}, \code{gaussian}, and \code{optimal}.
Default is \code{optimal}.}

\item{data}{Data for cross-validation. A \code{list} of \eqn{k}
\code{data.frames}, one for each fold to be used in \eqn{k}-fold
cross-validation.}

\item{verbose}{Verbose output. A logical argument indicating whether or not
verbose output should be printed. Default is \code{FALSE}.}

\item{cores}{The number of cores to be used. An integer indicating the number
of processor cores used for parallel computing. Default is 1.}
}
\value{
The tuned \code{knn.k} parameter. An integer-valued scalar.
}
\description{
\code{run_knn} is a wrapper function that applies the KNN classifier to data
provided by the user, evaluates prediction performance, and chooses the
best-performing model.
}
